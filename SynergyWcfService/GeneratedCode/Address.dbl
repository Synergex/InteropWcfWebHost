;; Generated on 03-Nov-2010 1:47:8 by SynergyInterop, Version=1.0.0.0, Culture=neutral, PublicKeyToken=114c5dbb1312a8bc
;; 
;; The contents of this file are auto-generated. Only add modifications to the end of this file.
;; Any modifications will be lost when the file is re-generated.
;; 
import System;
import System.Text;
import System.Runtime.Serialization;
import System.ServiceModel;
namespace SynergyWcfService
 
;;; <summary>
;;; Structural Interface Class SynergyWcfService
;;; </summary>
	{DataContractAttribute}
	{Serializable}
	public class Address
	 
		private f_Address_id    ,int
		 
		;;; <summary>
		;;; Address ID
		;;; </summary>
		{DataMemberAttribute}
		public property Address_id   ,int
			method get
			proc
			    mreturn f_Address_id
			endmethod
			method set
			proc
			    if(f_Address_id != value) 
			       m_changed = true 
			    f_Address_id = value
			endmethod
		endproperty
		 
		private f_Customer_id    ,int
		 
		;;; <summary>
		;;; Customer ID
		;;; </summary>
		{DataMemberAttribute}
		public property Customer_id   ,int
			method get
			proc
			    mreturn f_Customer_id
			endmethod
			method set
			proc
			    if(f_Customer_id != value) 
			       m_changed = true 
			    f_Customer_id = value
			endmethod
		endproperty
		 
		private f_Address_type    ,Address_type
		 
		;;; <summary>
		;;; Type of address
		;;; </summary>
		{DataMemberAttribute}
		public property Address_type   ,Address_type
			method get
			proc
			    mreturn f_Address_type
			endmethod
			method set
			proc
			    if(f_Address_type != value) 
			       m_changed = true 
			    f_Address_type = value
			endmethod
		endproperty
		 
		private f_Address1    ,string
		 
		;;; <summary>
		;;; Address Line 1 - Number, Building
		;;; </summary>
		{DataMemberAttribute}
		public property Address1   ,string
			method get
			proc
			    mreturn f_Address1
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Address1)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Address1.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Address1 = value
			endmethod
		endproperty
		 
		private f_Address2    ,string
		 
		;;; <summary>
		;;; Address Line 2 - Number, street
		;;; </summary>
		{DataMemberAttribute}
		public property Address2   ,string
			method get
			proc
			    mreturn f_Address2
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Address2)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Address2.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Address2 = value
			endmethod
		endproperty
		 
		private f_Address3    ,string
		 
		;;; <summary>
		;;; Address Line 3 - Area, locality
		;;; </summary>
		{DataMemberAttribute}
		public property Address3   ,string
			method get
			proc
			    mreturn f_Address3
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Address3)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Address3.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Address3 = value
			endmethod
		endproperty
		 
		private f_City    ,string
		 
		;;; <summary>
		;;; City
		;;; </summary>
		{DataMemberAttribute}
		public property City   ,string
			method get
			proc
			    mreturn f_City
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_City)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_City.Equals(value)) 
			           m_changed = true 
			       end 
			      f_City = value
			endmethod
		endproperty
		 
		private f_Postal_code    ,string
		 
		;;; <summary>
		;;; Zip or Postal code
		;;; </summary>
		{DataMemberAttribute}
		public property Postal_code   ,string
			method get
			proc
			    mreturn f_Postal_code
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Postal_code)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Postal_code.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Postal_code = value
			endmethod
		endproperty
		 
		private f_Zip    ,int
		 
		;;; <summary>
		;;; Zip Code (US Only)
		;;; </summary>
		{DataMemberAttribute}
		public property Zip   ,int
			method get
			proc
			    mreturn f_Zip
			endmethod
			method set
			proc
			    if(f_Zip != value) 
			       m_changed = true 
			    f_Zip = value
			endmethod
		endproperty
		 
		private f_Zip_extend    ,int
		 
		;;; <summary>
		;;; Zip extension (US Only)
		;;; </summary>
		{DataMemberAttribute}
		public property Zip_extend   ,int
			method get
			proc
			    mreturn f_Zip_extend
			endmethod
			method set
			proc
			    if(f_Zip_extend != value) 
			       m_changed = true 
			    f_Zip_extend = value
			endmethod
		endproperty
		 
		private f_State    ,string
		 
		;;; <summary>
		;;; State, Province or Country
		;;; </summary>
		{DataMemberAttribute}
		public property State   ,string
			method get
			proc
			    mreturn f_State
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_State)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_State.Equals(value)) 
			           m_changed = true 
			       end 
			      f_State = value
			endmethod
		endproperty
		 
		private f_Country    ,string
		 
		;;; <summary>
		;;; Country
		;;; </summary>
		{DataMemberAttribute}
		public property Country   ,string
			method get
			proc
			    mreturn f_Country
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Country)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Country.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Country = value
			endmethod
		endproperty
		 
		private f_Mailing_address    ,boolean
		 
		;;; <summary>
		;;; This is a mailing address
		;;; </summary>
		{DataMemberAttribute}
		public property Mailing_address   ,boolean
			method get
			proc
			    mreturn f_Mailing_address
			endmethod
			method set
			proc
			    if(f_Mailing_address != value) 
			       m_changed = true 
			    f_Mailing_address = value
			endmethod
		endproperty
		 
		private f_Billing_address    ,boolean
		 
		;;; <summary>
		;;; This is a billing address
		;;; </summary>
		{DataMemberAttribute}
		public property Billing_address   ,boolean
			method get
			proc
			    mreturn f_Billing_address
			endmethod
			method set
			proc
			    if(f_Billing_address != value) 
			       m_changed = true 
			    f_Billing_address = value
			endmethod
		endproperty
		 
		private f_Main_address    ,boolean
		 
		;;; <summary>
		;;; This is the main office address
		;;; </summary>
		{DataMemberAttribute}
		public property Main_address   ,boolean
			method get
			proc
			    mreturn f_Main_address
			endmethod
			method set
			proc
			    if(f_Main_address != value) 
			       m_changed = true 
			    f_Main_address = value
			endmethod
		endproperty
		 
		private f_Satellite_office    ,boolean
		 
		;;; <summary>
		;;; This is a satellite office address
		;;; </summary>
		{DataMemberAttribute}
		public property Satellite_office   ,boolean
			method get
			proc
			    mreturn f_Satellite_office
			endmethod
			method set
			proc
			    if(f_Satellite_office != value) 
			       m_changed = true 
			    f_Satellite_office = value
			endmethod
		endproperty
		 
		private f_Active_date    ,DateTime
		 
		;;; <summary>
		;;; Date address became active
		;;; </summary>
		{DataMemberAttribute}
		public property Active_date   ,DateTime
			method get
			proc
			    mreturn f_Active_date
			endmethod
			method set
			proc
			    if(f_Active_date != value) 
			       m_changed = true 
			    f_Active_date = value
			endmethod
		endproperty
		 
		private f_Replication_key    ,string
		 
		;;; <summary>
		;;; SQL Replication Timestamp
		;;; </summary>
		{DataMemberAttribute}
		public property Replication_key   ,string
			method get
			proc
			    mreturn f_Replication_key
			endmethod
			method set
			proc
			      if(String.IsNullOrEmpty(f_Replication_key)) then
			       begin 
			         m_changed = true 
			       end 
			      else
			       begin 
			        if(!f_Replication_key.Equals(value)) 
			           m_changed = true 
			       end 
			      f_Replication_key = value
			endmethod
		endproperty
		 
		;;; <summary>
		;;; structure clone
		;;; </summary>
		public method Clone    ,@SynergyWcfService.Address
		endparams
		record
		    i      ,int
		    tmp    ,@SynergyWcfService.Address
		endrecord
		proc
			tmp = new SynergyWcfService.Address()
			tmp.f_Address_id = this.f_Address_id
			tmp.f_Customer_id = this.f_Customer_id
			tmp.f_Address_type = this.f_Address_type
			tmp.f_Address1 = this.f_Address1
			tmp.f_Address2 = this.f_Address2
			tmp.f_Address3 = this.f_Address3
			tmp.f_City = this.f_City
			tmp.f_Postal_code = this.f_Postal_code
			tmp.f_Zip = this.f_Zip
			tmp.f_Zip_extend = this.f_Zip_extend
			tmp.f_State = this.f_State
			tmp.f_Country = this.f_Country
			tmp.f_Mailing_address = this.f_Mailing_address
			tmp.f_Billing_address = this.f_Billing_address
			tmp.f_Main_address = this.f_Main_address
			tmp.f_Satellite_office = this.f_Satellite_office
			tmp.f_Active_date = this.f_Active_date
			tmp.f_Replication_key = this.f_Replication_key
			mreturn tmp;
		endmethod
		private f_original    ,@SynergyWcfService.Address
		;;; <summary>
		;;; Used to store a copy of the original structure
		;;; </summary>
		public property Original,  @SynergyWcfService.Address
			method get
			proc
				mreturn f_original
			endmethod
			method set
			proc
				f_original = value
			endmethod
			endproperty
		;;; <summary>
		;;; structure equals
		;;; </summary>
		public method Equals,   boolean
			str    ,@SynergyWcfService.Address
		endparams
		record
			i     ,int
			eql   ,boolean
		endrecord
		proc
			eql = true;
			if (this.Address_id != str.Address_id)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Customer_id != str.Customer_id)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Address_type != str.Address_type)
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Address1.Equals(str.Address1))
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Address2.Equals(str.Address2))
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Address3.Equals(str.Address3))
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.City.Equals(str.City))
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Postal_code.Equals(str.Postal_code))
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Zip != str.Zip)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Zip_extend != str.Zip_extend)
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.State.Equals(str.State))
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Country.Equals(str.Country))
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Mailing_address != str.Mailing_address)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Billing_address != str.Billing_address)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Main_address != str.Main_address)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Satellite_office != str.Satellite_office)
			  begin
				eql = false
				mreturn eql
			  end
			if (this.Active_date != str.Active_date)
			  begin
				eql = false
				mreturn eql
			  end
			if (!this.Replication_key.Equals(str.Replication_key))
			  begin
				eql = false
				mreturn eql
			  end
			mreturn eql;
		endmethod
		;;; <summary>
		;;; Constructor
		;;; </summary>
		public method Address
		endparams
		proc
		endmethod
 
		private m_changed    ,boolean, false
 
		;;; <summary>
		;;; Structure Changed 
		;;; </summary>
		;;; <returns>true if structure has been changed</returns>
		public property Changed    ,boolean
			method get
			proc
			    mreturn m_changed
		endmethod
		endproperty
 
		;;; <summary>
		;;; Serialize a structure to a string
		;;; </summary>
		public method StructToString,    string 
		endparams
		record Tmp_Address
			Address_id    ,i4
			Customer_id    ,i4
			Address_type    ,i4
			Address1    ,a50
			Address2    ,a50
			Address3    ,a50
			City    ,a30
			Postal_code    ,a10
			Zip    ,d5
			Zip_extend    ,d4
			State    ,a2
			Country    ,a2
			Mailing_address    ,d4
			Billing_address    ,d4
			Main_address    ,d4
			Satellite_office    ,d4
			Active_date    ,d8
			Replication_key    ,a20
		endrecord
		record
			outString    ,string
			hldString    ,string
			i            ,i4
		endrecord
		proc
			Tmp_Address.Address_id = this.Address_id
			Tmp_Address.Customer_id = this.Customer_id
			Tmp_Address.Address_type = %integer(this.Address_type)
			Tmp_Address.Address1 = this.Address1
			Tmp_Address.Address2 = this.Address2
			Tmp_Address.Address3 = this.Address3
			Tmp_Address.City = this.City
			Tmp_Address.Postal_code = this.Postal_code
			Tmp_Address.Zip = this.Zip
			Tmp_Address.Zip_extend = this.Zip_extend
			Tmp_Address.State = this.State
			Tmp_Address.Country = this.Country
			Tmp_Address.Mailing_address = this.Mailing_address
			Tmp_Address.Billing_address = this.Billing_address
			Tmp_Address.Main_address = this.Main_address
			Tmp_Address.Satellite_office = this.Satellite_office
			Tmp_Address.Active_date = %DateTimeToDec(f_Active_date, "YYYYMMDD")
			Tmp_Address.Replication_key = this.Replication_key
			outstring = Tmp_Address
			mreturn outstring
		endmethod
		;;; <summary>
		;;; Serialize a string to a structure
		;;; </summary>
		public method StringToStruct,    void 
			stringIn    ,string
		endparams
		record Tmp_Address
			Address_id    ,i4
			Customer_id    ,i4
			Address_type    ,i4
			Address1    ,a50
			Address2    ,a50
			Address3    ,a50
			City    ,a30
			Postal_code    ,a10
			Zip    ,d5
			Zip_extend    ,d4
			State    ,a2
			Country    ,a2
			Mailing_address    ,d4
			Billing_address    ,d4
			Main_address    ,d4
			Satellite_office    ,d4
			Active_date    ,d8
			Replication_key    ,a20
		endrecord
		record
			i          ,i4
			len        ,i4
			pos        ,i4
			hldString  ,string
		endrecord
		proc
			Tmp_Address = stringIn
			f_Address_id = Tmp_Address.Address_id
			f_Customer_id = Tmp_Address.Customer_id
			f_Address_type = (Address_type)(%integer(Tmp_Address.Address_type))
			f_Address1 = %atrim(Tmp_Address.Address1)
			f_Address2 = %atrim(Tmp_Address.Address2)
			f_Address3 = %atrim(Tmp_Address.Address3)
			f_City = %atrim(Tmp_Address.City)
			f_Postal_code = %atrim(Tmp_Address.Postal_code)
			f_Zip = Tmp_Address.Zip
			f_Zip_extend = Tmp_Address.Zip_extend
			f_State = %atrim(Tmp_Address.State)
			f_Country = %atrim(Tmp_Address.Country)
			f_Mailing_address = Tmp_Address.Mailing_address
			f_Billing_address = Tmp_Address.Billing_address
			f_Main_address = Tmp_Address.Main_address
			f_Satellite_office = Tmp_Address.Satellite_office
			f_Active_date = new DateTime(%DecToDateTime(Tmp_Address.Active_date, "YYYYMMDD"))
			f_Replication_key = %atrim(Tmp_Address.Replication_key)
			mreturn
		endmethod
		;;; <summary>
		;;; Serialize a Synergy structure to a .NET structure
		;;; </summary>
		public method SynergyToStruct,    void 
			structIn    ,a
		endparams
		record Tmp_Address
			Address_id    ,i4
			Customer_id    ,i4
			Address_type    ,i4
			Address1    ,a50
			Address2    ,a50
			Address3    ,a50
			City    ,a30
			Postal_code    ,a10
			Zip    ,d5
			Zip_extend    ,d4
			State    ,a2
			Country    ,a2
			Mailing_address    ,d4
			Billing_address    ,d4
			Main_address    ,d4
			Satellite_office    ,d4
			Active_date    ,d8
			Replication_key    ,a20
		endrecord
		record
			i          ,i4
			len        ,i4
			pos        ,i4
			hldString  ,string
		endrecord
		proc
			Tmp_Address = structIn
			f_Address_id = Tmp_Address.Address_id
			f_Customer_id = Tmp_Address.Customer_id
			i = (%integer(Tmp_Address.Address_type))
			f_Address_type = (Address_type)i
			f_Address1 = %atrim(Tmp_Address.Address1)
			f_Address2 = %atrim(Tmp_Address.Address2)
			f_Address3 = %atrim(Tmp_Address.Address3)
			f_City = %atrim(Tmp_Address.City)
			f_Postal_code = %atrim(Tmp_Address.Postal_code)
			f_Zip = Tmp_Address.Zip
			f_Zip_extend = Tmp_Address.Zip_extend
			f_State = %atrim(Tmp_Address.State)
			f_Country = %atrim(Tmp_Address.Country)
			f_Mailing_address = Tmp_Address.Mailing_address
			f_Billing_address = Tmp_Address.Billing_address
			f_Main_address = Tmp_Address.Main_address
			f_Satellite_office = Tmp_Address.Satellite_office
			f_Active_date = new DateTime(%DecToDateTime(Tmp_Address.Active_date, "YYYYMMDD"))
			f_Replication_key = %atrim(Tmp_Address.Replication_key)
			mreturn
		endmethod
	endclass
endnamespace
